name: Docker Build CI

on:
  push:
    branches: [ "dev" ]

jobs:

  build_and_push:

    runs-on: ubuntu-latest

    steps:
    - name: Check out the repo
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build db_diagram
      run: |
        curl -L https://github.com/KarnerTh/mermerd/releases/download/v0.10.0/mermerd_0.10.0_linux_amd64.tar.gz \
        -o mermerd_0.10.0_linux_arm64.tar.gz
        mkdir mermerd
        tar -xzvf mermerd_0.10.0_linux_arm64.tar.gz -C mermerd
        mermerd/mermerd -c ${{ secrets.DB_CONNECTION_STRING }} -o docs/db_diagram.md -s public \
        --useAllTables --encloseWithMermaidBackticks

    - name: Build mkdocs
      run: |
        pip install mkdocs-material "mkdocstrings[python]"
        mkdocs build

    - name: Build the Docker image
      run: |
        env SERVER_DOCKERFILE=${{ secrets.SERVER_DOCKERFILE }} \
        DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }} \
        DOCKER_BACKEND_REPOSITORY=${{ secrets.DOCKER_BACKEND_REPOSITORY }} \
        RUN_ID=${{ github.run_id }} \
        docker-compose --file docker-compose.demo.yml build backend

    - name: Push to Docker Hub
      run: |
        env DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }} \
        DOCKER_BACKEND_REPOSITORY=${{ secrets.DOCKER_BACKEND_REPOSITORY }} \
        RUN_ID=${{ github.run_id }} \
        docker-compose --file docker-compose.demo.yml push backend

  pull_and_deploy:
    needs: build_and_push
    name: Update server by ssh
    runs-on: ubuntu-latest
    steps:
      - name: Connect and run script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script_stop: true
          script: |
            cd msu
            cd msu-backend
            git checkout dev
            git pull
            
            echo "Stop containers"
            docker-compose --file docker-compose.demo.yml stop backend rq-worker
            
            echo "Clean system"
            docker system prune -f
            
            echo "Pull new images"
            env DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }} \
            DOCKER_BACKEND_REPOSITORY=${{ secrets.DOCKER_BACKEND_REPOSITORY }} \
            RUN_ID=${{ github.run_id }} \
            docker-compose --file docker-compose.demo.yml pull backend rq-worker
            
            echo "Run new containers"
            env DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }} \
            DOCKER_BACKEND_REPOSITORY=${{ secrets.DOCKER_BACKEND_REPOSITORY }} \
            RUN_ID=${{ github.run_id }} \
            docker-compose --file docker-compose.demo.yml up -d backend rq-worker